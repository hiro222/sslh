diff --git a/CMakeLists.txt b/CMakeLists.txt
index 235c10f..99c9a73 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,7 +12,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-cmake_minimum_required (VERSION 3.5)
+cmake_minimum_required (VERSION 3.13)
 
 # NNabla project
 project (nbla C CXX)
@@ -51,12 +51,7 @@ string(REGEX REPLACE [[^([0-9]+)\.([0-9]+)\.(.*)$]] [[\1]] version_major ${versi
 string(REGEX REPLACE [[^([0-9]+)\.([0-9]+)\.(.*)$]] [[\2]] version_minor ${version})
 string(REGEX REPLACE [[^([0-9]+)\.([0-9]+)\.(.*)$]] [[\3]] version_patch ${version})
 
-if(NOT EXISTS ${CPPLIB_LIBRARY})
-  message(FATAL_ERROR "Invalid CPPLIB_LIBRARY :[${CPPLIB_LIBRARY}]")
-endif()
-if(NOT IS_ABSOLUTE ${CPPLIB_LIBRARY})
-  get_filename_component(CPPLIB_LIBRARY ${CMAKE_CURRENT_BINARY_DIR}/${CPPLIB_LIBRARY} ABSOLUTE)
-endif()
+set(CPPLIB_LIBRARY "${NBLA_LIBRARY_NAME}")
 
 option(NBLA_VERBOSE_MEMORY_USAGE "Enable debug print of memory usage" OFF)
 if(NBLA_VERBOSE_MEMORY_USAGE)
@@ -141,7 +136,6 @@ if(BUILD_CPP_LIB)
   ###############################################################################
   # Third party libraries
   ###############################################################################
-  add_subdirectory(third_party)
   
   if (NOT CMAKE_BUILD_TYPE)
     set(CMAKE_BUILD_TYPE "Release" CACHE STRING
@@ -171,24 +165,25 @@ if(BUILD_CPP_LIB)
   nbla_warnings_disable(CMAKE_CXX_FLAGS -Wno-sign-compare -Wno-uninitialized /wd4099)
   
   # Setting output directory naively
-  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
+  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
   if (WIN32)
-    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
-    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
+    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
+    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
   else()
-    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
-    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
+    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
+    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
   endif()
   
   ###############################################################################
   # C++ core
   ###############################################################################
   # includes
+  find_package(Eigen3 3.3.5 REQUIRED)
   list(APPEND NBLA_INCLUDE_DIRS
     ${PROJECT_SOURCE_DIR}/include
     ${NNABLA_DIR}/include
-    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/eigen-3.3.5
-    ${NNABLA_DIR}/include/third_party/)
+    ${NNABLA_DIR}/include/third_party/
+    ${EIGEN3_INCLUDE_DIRS})
   include_directories(${NBLA_INCLUDE_DIRS};${PROJECT_BINARY_DIR})
   
   ###############################################################################
@@ -249,7 +244,7 @@ if(BUILD_CPP_LIB)
       " NBLA_PYTHON_BUILD_EXT_COMPILER. You can see a list of supported"
       " compiler by `python setup.py build_ext --help-compiler`.")
   endif()
-  set(NBLA_PYTHON_BUILD_DIR ${CMAKE_BINARY_DIR})
+  set(NBLA_PYTHON_BUILD_DIR ${PROJECT_BINARY_DIR})
 
   # Two-step configure_file generation with generate-time property (target_file_name).
   # http://cmake.3232098.n2.nabble.com/cmp0026-file-GENERATE-and-configure-file-td7590275.html
@@ -319,7 +314,7 @@ if(BUILD_PYTHON_PACKAGE)
     ${CMAKE_CURRENT_SOURCE_DIR}/python/src/*.h)
   
   set(NBLA_PYTHON_SETUP ${CMAKE_CURRENT_SOURCE_DIR}/python/setup.py)
-  set(NBLA_PYTHON_OUTPUT ${CMAKE_BINARY_DIR}/build)
+  set(NBLA_PYTHON_OUTPUT ${PROJECT_BINARY_DIR}/build)
   set(NBLA_PYTHON_OUTPUT_WHEEL ${NBLA_PYTHON_OUTPUT}/.timestamp.wheel)
   set(NBLA_WHEEL_DEPENDS ${NBLA_PYTHON_DEPS} ${NBLA_CUDA_LIBRARY_NAME})
   
@@ -327,18 +322,18 @@ if(BUILD_PYTHON_PACKAGE)
   if(UNIX)
     if(MAKE_MANYLINUX_WHEEL)
       add_custom_command(OUTPUT ${NBLA_PYTHON_OUTPUT_WHEEL}
-        COMMAND ${CMAKE_COMMAND} -E remove -f ${CMAKE_BINARY_DIR}/dist/*.whl
+        COMMAND ${CMAKE_COMMAND} -E remove -f ${PROJECT_BINARY_DIR}/dist/*.whl
         COMMAND ${CMAKE_COMMAND} -E env
                 MULTI_GPU_SUFFIX=${MULTIGPU_SUFFIX}
                 WHEEL_SUFFIX=${WHEEL_SUFFIX}
                 ${PYTHON_COMMAND} ${NBLA_PYTHON_SETUP} -q bdist_wheel
-        COMMAND ${NNABLA_DIR}/build-tools/auditwheel-nnabla ${CMAKE_BINARY_DIR}/dist/*-linux_*.whl
-        COMMAND ${CMAKE_COMMAND} -E remove -f ${CMAKE_BINARY_DIR}/dist/*-linux*.whl
+        COMMAND ${NNABLA_DIR}/build-tools/auditwheel-nnabla ${PROJECT_BINARY_DIR}/dist/*-linux_*.whl
+        COMMAND ${CMAKE_COMMAND} -E remove -f ${PROJECT_BINARY_DIR}/dist/*-linux*.whl
         COMMAND ${CMAKE_COMMAND} -E touch ${NBLA_PYTHON_OUTPUT_WHEEL}
         DEPENDS ${NBLA_WHEEL_DEPENDS})
     else()
       add_custom_command(OUTPUT ${NBLA_PYTHON_OUTPUT_WHEEL}
-        COMMAND ${CMAKE_COMMAND} -E remove -f ${CMAKE_BINARY_DIR}/dist/*.whl
+        COMMAND ${CMAKE_COMMAND} -E remove -f ${PROJECT_BINARY_DIR}/dist/*.whl
         COMMAND ${CMAKE_COMMAND} -E env
                 MULTI_GPU_SUFFIX=${MULTIGPU_SUFFIX}
                 WHEEL_SUFFIX=${WHEEL_SUFFIX}
diff --git a/examples/cpp/mnist_collection/CMakeLists.txt b/examples/cpp/mnist_collection/CMakeLists.txt
index f2fbc39..d3248f5 100644
--- a/examples/cpp/mnist_collection/CMakeLists.txt
+++ b/examples/cpp/mnist_collection/CMakeLists.txt
@@ -12,9 +12,6 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-get_filename_component(CPPLIB_DIR ${CPPLIB_LIBRARY} DIRECTORY)
-link_directories(${CPPLIB_DIR})
-
 add_executable(train_lenet_classifier_cuda train_lenet_classifier_cuda.cpp)
 add_executable(train_resnet_classifier_cuda train_resnet_classifier_cuda.cpp)
 add_executable(train_vae_cuda train_vae_cuda.cpp)
diff --git a/examples/cpp/mnist_training/CMakeLists.txt b/examples/cpp/mnist_training/CMakeLists.txt
index 932c72b..199598a 100644
--- a/examples/cpp/mnist_training/CMakeLists.txt
+++ b/examples/cpp/mnist_training/CMakeLists.txt
@@ -12,9 +12,6 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-get_filename_component(CPPLIB_DIR ${CPPLIB_LIBRARY} DIRECTORY)
-link_directories(${CPPLIB_DIR})
-
 add_executable(mnist_training_cuda main.cpp)
 find_package(ZLIB REQUIRED)
 include_directories(${ZLIB_INCLUDE_DIRS})
diff --git a/src/nbla/cuda/CMakeLists.txt b/src/nbla/cuda/CMakeLists.txt
index 61bdc00..627117b 100644
--- a/src/nbla/cuda/CMakeLists.txt
+++ b/src/nbla/cuda/CMakeLists.txt
@@ -93,7 +93,7 @@ list(APPEND NBLA_CUDA_LINKER_LIBS ${CUDNN_LIBRARIES})
 include_directories(${NBLA_CUDA_INCLUDE_DIRS})
 message("CUDA libs: ${NBLA_CUDA_LINKER_LIBS}")
 message("CUDA includes: ${NBLA_CUDA_INCLUDE_DIRS}")
-include(${CMAKE_SOURCE_DIR}/build-tools/cmake/select_compute_arch.cmake)
+include(${PROJECT_SOURCE_DIR}/build-tools/cmake/select_compute_arch.cmake)
 CUDA_SELECT_NVCC_ARCH_FLAGS(ARCH_FLAGS ${CUDA_SELECT_NVCC_ARCH_ARG})
 message("Arch: ${ARCH_FLAGS}")
 set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};${ARCH_FLAGS}")
diff --git a/src/nbla_cli/CMakeLists.txt b/src/nbla_cli/CMakeLists.txt
index a475e0d..05c96fe 100644
--- a/src/nbla_cli/CMakeLists.txt
+++ b/src/nbla_cli/CMakeLists.txt
@@ -12,9 +12,6 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-get_filename_component(CPPLIB_DIR ${CPPLIB_LIBRARY} DIRECTORY)
-link_directories(${CPPLIB_DIR})
-
 if (WIN32)
   # Use simulated cxxabi.h since it is not appeared in MSVC. 
   include_directories(${PROJECT_SOURCE_DIR}/include/msvc)
@@ -40,7 +37,6 @@ if (NNABLA_UTILS_WITH_HDF5)
 include_directories(${HDF5_INCLUDE_DIRS})
 endif()
 
-include_directories(${NNABLA_DIR}/src/nbla_cli)
 add_definitions(-DWITH_CUDA)
 add_executable(nbla_cuda nbla_cuda.cpp)
 
